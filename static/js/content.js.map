{"version":3,"sources":["../webpack/bootstrap","types.ts","chrome/content.ts","util/tools.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Sender","messagesFromReactAppListener","message","sender","response","isValidated","log","id","chrome","runtime","from","React","validateSender","logo","document","getElementById","parentElement","removeChild","onMessage","addListener","round","number","pad","Math","rounder","pow","clamp","val","min","max","getStatValue","cachedPetStats","timeDiff","forceCurrent","curValue","find","cS","undefined","perSecond","getRenderedDeltaStats","stats","oldSaveTime","newSaveTime","map","label","getCachedDeltaStats","ensureArray","thing","Array","isArray"],"mappings":"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","file":"static/js/content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n","\r\nexport enum Sender {\r\n  React,\r\n  Content\r\n}\r\n\r\nexport interface ChromeMessage {\r\n  from: Sender,\r\n  message: any\r\n}\r\n\r\nexport type RawManifest = {\r\n  pets: RawManifestItem[]\r\n}\r\n\r\nexport type RawManifestItem = {\r\n  id: string,\r\n  baseUrl: string\r\n}\r\n\r\nexport type PetInfo = {\r\n  id: string,\r\n  name: string,\r\n  bio: string,\r\n  bornOn?: number,\r\n  level: number\r\n}\r\n\r\nexport type PetStatDefinitionJSON = {\r\n  id: string,\r\n  label: string,\r\n  value: number,\r\n  perSecond: number,\r\n  max: number,\r\n  fullIsGood: boolean,\r\n  statEffects: RawWhenThen[]\r\n}\r\n\r\nexport type PetStatDefinition = {\r\n  id: string,\r\n  label: string,\r\n  value: number,\r\n  perSecond: number,\r\n  max: number,\r\n  fullIsGood: boolean,\r\n  statEffects: WhenThenNumberGroup[]\r\n}\r\n\r\nexport type PetManifestEntry = {\r\n  id: string,\r\n  baseUrl: string\r\n}\r\n\r\nexport type AlertType = 'alert' | 'warning' | 'reward';\r\nexport type PetStatusDefinition = {\r\n  id: string,\r\n  label: string,\r\n  message: string,\r\n  alertType?: AlertType\r\n}\r\nexport type PetInteractionDefinition = {\r\n  id: string,\r\n  label: string,\r\n  cooldown: number,\r\n  changeStats: StatChangeDefinition[],\r\n  availability: WhenThenStringBooleanGroup[]\r\n}\r\n\r\nexport type PetInteractionDefinitionJSON = {\r\n  id: string,\r\n  label: string,\r\n  cooldown: number,\r\n  changeStats: StatChangeDefinition[],\r\n  availability: RawWhenThen[]\r\n}\r\n\r\nexport type StatChangeDefinition = {\r\n  statId: string,\r\n  value: number\r\n}\r\n\r\nexport type PetBehaviorDefinition = {\r\n  id: string,\r\n  imageUrl: string,\r\n  position: string,\r\n  offsetX: number,\r\n  offsetY: number\r\n}\r\n\r\nexport type PetBehaviorJSON = {\r\n  id: string,\r\n  image?: string,\r\n  imageUrl?: string,\r\n  position: string,\r\n  offsetX?: number,\r\n  offsetY?: number\r\n}\r\n\r\nexport type WhenNumber = {\r\n  condition: ConditionOperator,\r\n  criteria: number,\r\n  isPercent: boolean\r\n}\r\nexport type RawWhenThen = {\r\n  when: string[],\r\n  then: (string | string[] | boolean),\r\n}\r\nexport type WhenThenNumberGroup = {\r\n  when: WhenNumber[],\r\n  then: (string | string[])\r\n}\r\n\r\nexport type WhenThenStringGroup = {\r\n  when: string[],\r\n  then: (string | string[])\r\n}\r\nexport type WhenThenStringBooleanGroup = {\r\n  when: string[],\r\n  then: boolean\r\n}\r\nexport type PetLogicGroup = {\r\n  stats: PetStatDefinition[],\r\n  statuses: PetStatusDefinition[],\r\n  behaviors: PetBehaviorDefinition[],\r\n  behaviorRules: WhenThenStringGroup[],\r\n  interactions: PetInteractionDefinition[],\r\n}\r\n\r\nexport type PingPayload = {\r\n  time: number,\r\n  doSave?: boolean\r\n}\r\n\r\nexport type RawPetJSON = {\r\n  id: string,\r\n  name: string,\r\n  bio: string,\r\n  level: number,\r\n  baseUrl: string,\r\n  logic: {\r\n    stats: PetStatDefinitionJSON[],\r\n    statuses: PetStatusDefinition[],\r\n    behaviors: PetBehaviorJSON[],\r\n    behaviorRules: {when:string[], then:string}[],\r\n    interactions: PetInteractionDefinitionJSON[]\r\n  },\r\n  backgroundImage?:string,\r\n  backgroundColor?:string\r\n}\r\n\r\nexport type PetDefinition = {\r\n  id: string,\r\n  name: string,\r\n  bio: string,\r\n  bornOn?: number,\r\n  level: number,\r\n  logic: PetLogicGroup,\r\n  bgImage?:string,\r\n  bgColor?:string\r\n}\r\n\r\nexport type PetListItem = {\r\n  name: string,\r\n  id: string,\r\n  isActive?: boolean\r\n}\r\n\r\n// slimmer save object for localStorage\r\nexport type CachedPetStat = {\r\n  id: string,\r\n  value: number\r\n}\r\nexport type SavedPetState = {\r\n  id: string,\r\n  stats: CachedPetStat[],\r\n  lastSaved?: number,\r\n  bornOn?: number,\r\n  beingTracked?: boolean\r\n}\r\n\r\nexport type InteractionCooldownStatus = {\r\n  id: string,\r\n  startAt: number,\r\n  endAt: number // result of cooldown, if cooldown is 0, this whole record wouldnt have been saved\r\n}\r\n\r\nexport type PetInteractionDetail = {\r\n  id: string,\r\n  label: string,\r\n  startAt: number,\r\n  endAt: number,\r\n  enabled: boolean,\r\n  definition: PetInteractionDefinition,\r\n  cooldownStatus: InteractionCooldownStatus,\r\n}\r\n\r\nexport type LocalStorageState = {\r\n  config: {\r\n    activePet?: string,\r\n    lastSaved: number,\r\n  },\r\n  interactions: InteractionCooldownStatus[],\r\n  pets: SavedPetState[]\r\n}\r\n\r\nexport type ConditionOperator = '='|'<'|'<='|'>'|'>=';\r\n\r\nexport type DeltaStat = {\r\n  id: string,\r\n  value: number,\r\n  max: number,\r\n  label: string\r\n}\r\n","import { ChromeMessage, Sender } from \"../types\";\r\nimport { log } from \"../util/tools\";\r\n\r\ntype MessageResponse = (response?: any) => void\r\n\r\nconst validateSender = (\r\n  message: ChromeMessage,\r\n  sender: chrome.runtime.MessageSender\r\n) => {\r\n  log('validateSender', sender)\r\n  return sender.id === chrome.runtime.id && message.from === Sender.React;\r\n}\r\n\r\nconst messagesFromReactAppListener = (\r\n  message: ChromeMessage,\r\n  sender: chrome.runtime.MessageSender,\r\n  response: MessageResponse\r\n) => {\r\n\r\n  const isValidated = validateSender(message, sender);\r\n  log('got message', message.message)\r\n\r\n  if (isValidated && message.message === 'Hello from React') {\r\n    response('Hello from content.js');\r\n  }\r\n\r\n  if (isValidated && message.message === \"delete logo\") {\r\n    const logo = document.getElementById('hplogo');\r\n    logo?.parentElement?.removeChild(logo)\r\n  }\r\n}\r\n\r\nconst main = () => {\r\n  log('[content.ts] Main');\r\n  /**\r\n   * Fired when a message is sent from either an extension process or a content script.\r\n   */\r\n  chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\r\n}\r\n\r\nmain();\r\n\r\n\r\n","import { PetStatDefinition, DeltaStat, CachedPetStat } from '../types';\r\n\r\n// general\r\nexport const round = (number:number, pad?:number) => {\r\n  if(!pad) return Math.round(number);\r\n  \r\n  const rounder = Math.pow(10, pad);\r\n  return Math.round(number * rounder) / rounder;\r\n};\r\n\r\nexport const clamp = (val:number, min:number, max:number) => {\r\n  return Math.min(Math.max(val, min), max);\r\n};\r\n\r\nexport const randBetween = (range:number[]) => {\r\n  return range[0] + (Math.random() * (range[1] - range[0]));\r\n};\r\n\r\nexport const getStatValue = (s: PetStatDefinition, cachedPetStats: CachedPetStat[], timeDiff: number, forceCurrent?: boolean) => {\r\n  let curValue = cachedPetStats.find(cS => cS.id === s.id)?.value;\r\n  if(curValue === undefined){\r\n    curValue = s.value;\r\n  }\r\n\r\n  if(forceCurrent) return curValue; // from invalid time supplied, dont calculate\r\n  return Math.round((clamp(curValue + (s.perSecond * timeDiff), 0, s.max)) * 100) / 100\r\n}\r\n\r\nexport const getRenderedDeltaStats = (stats: PetStatDefinition[], cachedPetStats: CachedPetStat[], oldSaveTime: number, newSaveTime: number) =>{\r\n  const timeDiff = (newSaveTime - oldSaveTime) / 1000;\r\n  /*\r\n    TODO, this could get removed simplified after resolving:\r\n    - redundant call on save\r\n    - negative time on change pet between saves\r\n  */\r\n\r\n  if(timeDiff <= 0){\r\n    return stats.map(s => {\r\n      return {\r\n        id: s.id,\r\n        value: getStatValue(s, cachedPetStats, timeDiff, true),\r\n        max: s.max,\r\n        label: s.label\r\n      }\r\n    });\r\n  }\r\n\r\n  return stats.map(s => {\r\n    return {\r\n      id: s.id,\r\n      value: getStatValue(s, cachedPetStats, timeDiff),\r\n      max: s.max,\r\n      label: s.label\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCachedDeltaStats = (stats: PetStatDefinition[], cachedPetStats: CachedPetStat[], oldSaveTime: number, newSaveTime: number) =>{\r\n  const timeDiff = (newSaveTime && oldSaveTime) ? (newSaveTime - oldSaveTime) / 1000 : 0;\r\n  return stats.map(s => {\r\n    return {\r\n      id: s.id,\r\n      value: getStatValue(s, cachedPetStats, timeDiff)\r\n    } as DeltaStat;\r\n  });\r\n};\r\n\r\nconst LOG = false;\r\nexport const log = (...messages:any) => {\r\n  LOG && console.log(...messages);\r\n}\r\n\r\nexport const ensureArray = (thing: any): any[] => {\r\n  return Array.isArray(thing) ? thing : [ thing ];\r\n}"],"sourceRoot":""}